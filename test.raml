#%RAML 0.8
title: Hello RAML
baseUri: https://{bucketName}.s3.amazonaws.com
version: v1
# description: |
#   Show the full list of artists.
#   Show the full list of albums.
#   Show the list of artists by nationality.
#   Show the list of albums by genre.
#   Search for a song by title.
#   Show a particular artist's albums collection.
#   Show a particular album's songs list.
#   Play a song (by specifying the song id).
#   Enter new Artists, Albums and Songs (only authenticated users).

schemas:
  - song: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "id": "http://jsonschema.net",
        "required": true,
        "properties": {
          "songId": {
            "type": "string",
            "required": true,
            "minLength": 36,
            "maxLength": 36
          },
          "songTitle": {
            "type": "string",
            "required": true
          },
          "albumId": {
            "type": "string",
            "required": true,
            "minLength": 36,
            "maxLength": 36
          }
        }
      }
resourceTypes:
  - collection:
      description: Collection of available <<resourcePathName>> in Jukebox.
      get:
        description: Get a list of <<resourcePathName>>.
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleCollection>>
      post:
        description: |
          Add a new <<resourcePathName|!singularize>> to Jukebox.
        queryParameters:
          access_token:
            description: "The access token provided by the authentication application"
            example: AABBCCDD
            required: true
            type: string
        body:
          application/json:
            schema: <<resourcePathName|!singularize>>
            example: |
              <<exampleItem>>
        responses:
          200:
            body:
              application/json:
                example: |
                    { "message": "The <<resourcePathName|!singularize>> has been properly entered" }
/songs:
  type:
    collection:
      exampleCollection: !include jukebox-include-songs.json
      exampleItem: !include jukebox-include-song.json
  get:
    queryParameters:
      songTitle:
        description: "The title of the song to search (it is case insensitive and doesn't need to match the whole title)"
        required: true
        minLength: 3
        type: string
        example: "Get L"
  /{songId}:
    description: Song entity
    get:
      description: Get the song with `songId = {songId}`
      responses:
        200:
          body:
            application/json:
              schema: song
              example: !include jukebox-include-song.json
        404:
          body:
            application/json:
              example: |
                {"message": "Song not found"}
    /file-content:
      get:
      post:
/artists:
  get:
  post:
  /{artistId}:
    get:
    /albums:
      get:
/albums:
  get:
  post:
  /{albumId}:
    get:
    /songs:
      get:
